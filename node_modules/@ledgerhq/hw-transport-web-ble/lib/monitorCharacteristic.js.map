{"version":3,"sources":["../src/monitorCharacteristic.js"],"names":["monitorCharacteristic","characteristic","create","uuid","onCharacteristicValueChanged","event","target","value","o","next","Buffer","from","buffer","startNotifications","then","addEventListener","stopNotifications"],"mappings":";;;;;;;AACA;;AAEA;;AAEO,IAAMA,wDAAwB,SAAxBA,qBAAwB,CACnCC,cADmC;AAAA,SAGnC,iBAAWC,MAAX,CAAkB,aAAK;AACrB,mBAAI,aAAJ,EAAmB,mBAAmBD,eAAeE,IAArD;;AAEA,aAASC,4BAAT,CAAsCC,KAAtC,EAA6C;AAC3C,UAAMJ,iBAAiBI,MAAMC,MAA7B;AACA,UAAIL,eAAeM,KAAnB,EAA0B;AACxBC,UAAEC,IAAF,CAAOC,OAAOC,IAAP,CAAYV,eAAeM,KAAf,CAAqBK,MAAjC,CAAP;AACD;AACF;;AAEDX,mBAAeY,kBAAf,GAAoCC,IAApC,CAAyC,YAAM;AAC7Cb,qBAAec,gBAAf,CACE,4BADF,EAEEX,4BAFF;AAID,KALD;;AAOA,WAAO,YAAM;AACX,qBAAI,aAAJ,EAAmB,iBAAiBH,eAAeE,IAAnD;AACAF,qBAAee,iBAAf;AACD,KAHD;AAID,GArBD,CAHmC;AAAA,CAA9B","file":"monitorCharacteristic.js","sourcesContent":["// @flow\nimport { Observable } from \"rxjs\";\nimport type { Characteristic } from \"./types\";\nimport { log } from \"@ledgerhq/logs\";\n\nexport const monitorCharacteristic = (\n  characteristic: Characteristic\n): Observable<Buffer> =>\n  Observable.create(o => {\n    log(\"ble-verbose\", \"start monitor \" + characteristic.uuid);\n\n    function onCharacteristicValueChanged(event) {\n      const characteristic = event.target;\n      if (characteristic.value) {\n        o.next(Buffer.from(characteristic.value.buffer));\n      }\n    }\n\n    characteristic.startNotifications().then(() => {\n      characteristic.addEventListener(\n        \"characteristicvaluechanged\",\n        onCharacteristicValueChanged\n      );\n    });\n\n    return () => {\n      log(\"ble-verbose\", \"end monitor \" + characteristic.uuid);\n      characteristic.stopNotifications();\n    };\n  });\n"]}